//Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL)return l2;
        if(l2==NULL)return l1;
        ListNode head(0);
        ListNode* phead=&head;
        ListNode* cmp=phead;
        while(l1&&l2){
            if(l1->val<=l2->val){cmp->next=l1;l1=l1->next;cmp=cmp->next;}
            else {cmp->next=l2;l2=l2->next;cmp=cmp->next;}
        }
        if(l1==NULL){cmp->next=l2;}
        else if(l2==NULL){cmp->next=l1;}
        return head.next;
    }
};
