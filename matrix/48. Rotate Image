You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Note:

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

//直接写四个式子比循环更好
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = n/2;
        int i = 0;
        while(i < m) {
            for(int j = i; j < n-i-1; j++) {
                int preval;
                int curval = matrix[i][j];
                for(int k = 0; k < 4; k++) {
                    preval = matrix[j][n-i-1];
                    matrix[j][n-i-1] = curval;
                    curval = preval;
                    int temp = j;
                    j = n-i-1;
                    i = temp;
                }
            }
            i++;
        }
    }
};

void rotate(vector<vector<int> > &matrix) {
    reverse(matrix.begin(), matrix.end());
    for (int i = 0; i < matrix.size(); ++i) {
        for (int j = i + 1; j < matrix[i].size(); ++j)
            swap(matrix[i][j], matrix[j][i]);
    }
}
