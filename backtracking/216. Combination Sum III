Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.
Note:
All numbers will be positive integers.
The solution set must not contain duplicate combinations.

//自写0ms
class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ans;
        vector<int> temp;
        helper(k, n, 1, temp, ans);
        return ans;
    }
    void helper(int k, int n, int i, vector<int>& temp, vector<vector<int>>& ans){
        if(k == 0){
            if(n == 0)ans.push_back(temp);
        }
        else if(i > 9 || n < i)return;
        else{
                temp.push_back(i);
                helper(k-1, n-i, i+1, temp, ans);
                temp.pop_back();
                helper(k, n, i+1, temp, ans);
        }
    }
};
