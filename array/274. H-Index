//Given an array of citations (each citation is a non-negative integer) of a researcher, write 
//a function to compute the researcher's h-index.
//According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, 
//and the other N − h papers have no more than h citations each."

//二分加验证
class Solution {
public:
    int hIndex(vector<int>& citations) {
        int size = citations.size();
        int lo = 0;
        int hi = size-1;
        int mid;
        int countlar;
        int countequ;
        while(lo <= hi){
            countlar = 0;
            countequ = 0;
            mid = (lo+hi)/2;
            for(int i = 0; i < size; i++){
                if(citations[i] > mid+1)countlar++;
                if(citations[i] == mid+1)countequ++;
            }
            if(countlar > mid+1)lo = mid+1;
            else if(countlar+countequ < mid+1)hi = mid-1;
            else return mid+1;
        }
        return 0;
    }
};

//DP
class Solution {
public:

int hIndex(vector<int>& citations) {
    if(citations.empty())
        return 0;
    int n = citations.size();
    vector<int> hash(n + 1, 0);
    for(int i = 0; i < n; ++i){
        if(citations[i] >= n)
            hash[n]++;
        else
            hash[citations[i]]++;
    }
    int paper = 0;
    for(int i = n; i >= 0; --i){
        paper += hash[i];
        if(paper >= i)
            return i;
    }
}

};
