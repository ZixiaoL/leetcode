Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.
Note:
The solution set must not contain duplicate quadruplets.

//
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        if(nums.size()<3)return ans;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-3;i++){//i为第一个数
            for(int j=i+1;j<nums.size()-2;j++){//j为第二个数
                int lo=j+1;
                int hi=nums.size()-1;
                while(lo<hi){
                    if(nums[i]+nums[j]+nums[lo]+nums[hi]<target){
                        lo++;
                    }
                    else  if(nums[i]+nums[j]+nums[lo]+nums[hi]>target){
                        hi--;
                    }
                    else {
                        ans.push_back({nums[i],nums[j],nums[lo],nums[hi]});
                        lo++;while(lo<hi&&nums[lo-1]==nums[lo])lo++;
                    }
                }
                while(j<nums.size()-2&&nums[j+1]==nums[j])j++;
            }
            while(i<nums.size()-3&&nums[i+1]==nums[i])i++;
        }
        return ans;
    }
};
