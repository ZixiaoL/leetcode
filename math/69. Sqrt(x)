//Implement int sqrt(int x).
//Compute and return the square root of x, where x is guaranteed to be a non-negative integer.
//Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

//Newton
    long r = x;
    while (r*r > x)
        r = (r + x/r) / 2;
    return r;
    
//二分
public int sqrt(int x) {
    if (x == 0)
        return 0;
    int left = 1, right = Integer.MAX_VALUE;
    while (true) {
        int mid = left + (right - left)/2;
        if (mid > x/mid) {
            right = mid - 1;
        } else {
            if (mid + 1 > x/(mid + 1))
                return mid;
            left = mid + 1;
        }
    }
}

//蛮力
class Solution {
public:
    int mySqrt(int x) {
        long i;
        for(i=0;i*i<=long(x);i++){
        }
        return int(i-1);
    }
};
