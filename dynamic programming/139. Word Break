Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words.
Note:
The same word in the dictionary may be reused multiple times in the segmentation.
You may assume the dictionary does not contain duplicate words.

//自写
class Solution {
public:
    unordered_map<string, bool> c;
    bool wordBreak(string s, vector<string>& wordDict) {
        if(c.find(s) != c.end())return c[s];
        unordered_set<string> st;
        for(auto& a : wordDict)st.insert(a);
        if(st.find(s) != st.end())return true;
        for(int i = 1; i < s.size(); i++){
            if(st.find(s.substr(i)) != st.end()){
                if(wordBreak(s.substr(0, i), wordDict)){
                    c[s] = true;
                    return true;
                }
            }
        }
        c[s] = false;
        return false;
    }
};

//https://leetcode.com/problems/word-break/discuss/43814/C%2B%2B-Dynamic-Programming-simple-and-fast-solution-(4ms)-with-optimization
j用加法也行
